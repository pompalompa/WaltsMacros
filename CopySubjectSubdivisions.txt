'MacroName:CopySubjectSubdivisions.2018.28
'MacroDescription:Copies subject subdivisions from one LC subject heading field to all
' similar subject heading fields.
'
' This macro was written by Walter F. Nickeson,
' University of Rochester, Rochester, NY
' wnickeson@library.rochester.edu
'
' Last updated: 4 July 2018.
' Check for the latest versions of this and my other macros at
' https://github.com/wnickeson/WaltsMacros
' Please e-mail me with bug reports or to suggest improvements.
'
' This macro works for me with Connexion client 2.63 and 64-bit Windows 7 Enterprise &
' 64-bit Windows 10 Pro, but no guarantees are promised or implied.
'
'****************************************************************************************
' How it works. This macro copies subject subdivisions from one heading in a
' bibliographic record to all similar headings in that same record. With a bibliographic
' record open, put the cursor in a 6XX field containing an LC subject heading that
' includes one or more subject subdivisions (subfields $v, $x, $y, and $z) you want to
' copy to the other, similar subject headings, and run the macro. The macro copies a
' string of subfields, beginning with the one in which the cursor is placed (or the first
' subject subdivision occurring after the cursor position) and continuing to the last
' subfield. If the cursor is placed before any subject subfields, all those subfields are
' copied; if it is placed within a subfield, that subfield, and all that follow, are
' copied; if it is placed at the end of the field, only the last subfield is copied. A
' subfield is the string of characters beginning with the delimiter and subfield code,
' and continuing until the next delimiter; the last subfield includes any terminal
' punctuation.
'
' "Similar headings" means headings of the same type: personal or corporate/conference
' name (600, 610, 611), title (630), topical (650), or geographic (651). Thus,
' subdivisions in a topical subject heading will be copied to other 650 fields,
' subdivisions in a personal name field will be copied to other 100 fields, and so on.
' However, if there are no other similar fields in the record, the macro offers the
' option of copying the subdivision string to all the other 6XX fields in the record
' anyway.
'
' The copied string comes from the end of the source field, and so will be added to the
' end of each target field; the macro won't copy subdivisions from the middle of one
' field to the middle of another.
'
' Use this macro to add the same subdivision string to several headings. Such a string
' is most likely to include form or geographic subdivisions, such as "$v Fiction", "$v
' Early works to 1800," "$x History $y 20th century," "$v Bibliography $v Catalogs," "$z
' Idaho $z Boise $v Case studies," etc. The subdivision string can be copied from any of
' the record's subject headings; it will be copied to the end of the appropriate fields
' that may precede or follow the source field.
'
' The macro does not check the validity of the heading to which subdivisions have been
' added, nor can it be more selective in which headings it copies the subdivisions to
' other than its requirement that the headings must be all of the same type (unless the
' option is selected to copy the subdivisions to all the record's subject headings).
'****************************************************************************************

Option Explicit

'****************************************************************************************

Sub Main

Const CRITICAL_MESSAGE                As Integer = 16  'The value to display a "Critical message" (which includes the red button with
                                                       ' a big "X") in a message box; used to report the macro quitting.
Const INFORMATION_MESSAGE             As Integer = 64  'The value to display the "Information message" icon in a message box.
Const MSGBOX_RETURN_CANCEL            As Integer = 2   'The value returned by a message box when the "Cancel" button is clicked.
Const MSGBOX_RETURN_NO                As Integer = 7   'The value returned by a message box when the "No" button is clicked.
Const MSGBOX_RETURN_YES               As Integer = 6   'The value returned by a message box when the "OK" button is clicked.
Const MSGBOX_SECOND_BUTTON            As Integer = 256 'The value to make the second button in a message box the default.
Const MSGBOX_SETBUTTONS_YES_NO        As Integer = 4   'The value to set two buttons, "Yes" and "No," in a message box.
Const MSGBOX_SETBUTTONS_YES_NO_CANCEL As Integer = 3   'The value to set three buttons, "Yes," "No," and "Cancel," in a message box.
Const WARNING_MESSAGE                 As Integer = 48  'The value to display the "Warning message" icon in a message box.

Const CORP_CONF_NAME_HEADING As Integer = 1
Const GEOGRAPHIC_HEADING     As Integer = 4
Const PERSONAL_NAME_HEADING  As Integer = 0
Const TITLE_HEADING          As Integer = 2
Const TOPICAL_HEADING        As Integer = 3

Dim CS As Object
Set CS = CreateObject("Connex.Client")

Dim All6XX%
Dim Answer%
Dim CandidateHeading%
Dim CandidateTag$
Dim CountOfSimilarSubjectHeadings%
Dim CountOfSubdivisions%
Dim CurrentColumn%
Dim CurrentRow%
Dim FailCount%
Dim FieldData$
Dim FieldWord$
Dim Question$
Dim NewField$
Dim PreviousDelimiter%
Dim Remainders%
Dim SourceField$
Dim SourceHeading%
Dim SourceTag$
Dim Start%
Dim SubdivisionString$
Dim SubdivisionStringStart%
Dim SubfieldCode$
Dim SuccessCount%
Dim TagName$
Dim TypeOfWindow%
Dim WaltsMacros$             : WaltsMacros$ = "[Walt's macros] Extras2:CopySubjectSubdivisions"

Dim DELIMITER As String*1    : DELIMITER    = Chr$( 223 )
Dim FIELD     As String*7    : FIELD        = " field "
Dim FIELDS    As String*8    : FIELDS       = " fields "

Dim AddAnyway                : AddAnyway    = FALSE
Dim FoundField

Dim i As Integer, p As Integer

' First, make sure that a bibliographic record is open.

TypeOfWindow% = CS.ItemType
Select Case TypeOfWindow%
  Case -1, 3 To 16, 18, 20 To 36
    MsgBox "Sorry, this macro works only in bibliographic records.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End Select

' The cursor position is critical.

CurrentRow%    = CS.CursorRow
CurrentColumn% = CS.CursorColumn

' Verify that the field in which the cursor is placed is an LC subject heading, and
' determine what kind of subject it is.

If CS.GetFieldLine( CurrentRow%, SourceField$ ) Then
    SourceTag$ = Left( SourceField$, 3 )
    If SourceTag$ Like "6[0135][01]" Then
        If Mid$( SourceField$, 5, 1 ) <> "0" Then
            MsgBox "This macro works only with LC subject headings.", CRITICAL_MESSAGE, WaltsMacros$
            Exit Sub
          Else
            Select Case SourceTag$
              Case "600"
                SourceHeading% = PERSONAL_NAME_HEADING
                TagName$       = "600"
              Case "610", "611"
                SourceHeading% = CORP_CONF_NAME_HEADING
                TagName$       = "610/611"
              Case "630"
                SourceHeading% = TITLE_HEADING
                TagName$       = "630"
              Case "650"
                SourceHeading% = TOPICAL_HEADING
                TagName$       = "650"
              Case "651"
                SourceHeading% = GEOGRAPHIC_HEADING
                TagName$       = "651"
            End Select
        End If

' Then ascertain where the cursor is placed with regard to its subdivisions, so as to
' determine the beginning of the string to copy. If no subdivisions are found, the macro
' quits.

        Start% = 1
        Do
          p = InStr( Start%, SourceField$, DELIMITER )
          If p > 0 Then
              SubfieldCode$ = Mid$( SourceField$, p + 1, 1 )
              If SubfieldCode$ Like "[vxyz]" Then
                  If p > CurrentColumn% Then
                      If CountOfSubdivisions% = 0 Then
                          SubdivisionStringStart% = p
                          CountOfSubdivisions%    = 1
                          Exit Do
                        Else
                          SubdivisionStringStart% = PreviousDelimiter%
                          Exit Do
                      End If
                    Else
                      SubdivisionStringStart% = p
                      PreviousDelimiter%      = p
                  End If
              End If
              CountOfSubdivisions% = CountOfSubdivisions% + 1
            Else
              If Start% = 1 Then
                  MsgBox "This subject heading has no subdivisions to copy.", CRITICAL_MESSAGE, WaltsMacros$
                  Exit Sub
              End If
          End If
          Start% = p + 1
        Loop Until p = 0

' If the cursor hasn't been placed in a subject field, display an error message, and
' quit.

      Else
        MsgBox "Please place the cursor in a subject field in order to copy its subdivisions to other subject headings.", CRITICAL_MESSAGE, WaltsMacros$
        Exit Sub
    End If
  Else
    MsgBox "Sorry, the macro failed.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End If

' If there are no subject subdivisions to copy, the macro quits.

If CountOfSubdivisions% = 0 Then
    MsgBox "This subject heading has no subdivisions to copy.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub

' But if there are subdivisions to copy, check that there are other subject headings to
' copy them to. Count all the LC subject headings and note how many of them are similar.

  Else
    SubdivisionString$ = Mid$( SourceField$, SubdivisionStringStart% )
    i = 1
    Do
      FoundField = CS.GetField( "6..", i, FieldData$ )
      If FieldData$ <> SourceField$ Then
          If FoundField Then
              If Mid$( FieldData$, 5, 1 ) = "0" Then
                  All6XX%       = All6XX% + 1
                  CandidateTag$ = Left$( FieldData$, 3 )
                  Select Case CandidateTag$
                    Case "600"
                      CandidateHeading% = PERSONAL_NAME_HEADING
                    Case "610", "611"
                      CandidateHeading% = CORP_CONF_NAME_HEADING
                    Case "630"
                      CandidateHeading% = TITLE_HEADING
                    Case "650"
                      CandidateHeading% = TOPICAL_HEADING
                    Case "651"
                      CandidateHeading% = GEOGRAPHIC_HEADING
                  End Select
                  If CandidateHeading% = SourceHeading% Then
                      CountOfSimilarSubjectHeadings% = CountOfSimilarSubjectHeadings% + 1
                  End If
              End If
          End If
      End If
      i = i + 1
    Loop Until FoundField = FALSE

' No other subject headings: No reason to go on.

    If All6XX% = 0 Then
        MsgBox "There are no other 6XX fields to copy the subdivision string to!", CRITICAL_MESSAGE, WaltsMacros$
        Exit Sub
    End If

' If there are other subject headings in the record, but none similar to the source
' field, or if there are additional subject headings that don't match the source field,
' determine if the string should be copied to those headings anyway.

    If CountOfSimilarSubjectHeadings% = 0 Then
        If All6XX% < 3 Then
            FieldWord$ = FIELD
          Else
            FieldWord$ = FIELDS
        End If
        Question$ = "This record contains no other " & TagName$ & " fields to which to copy the subdivision string."
        Question$ = Question$ & " Do you want to copy the string to the other 6XX" & FieldWord$ & "anyway?"
        Answer%   = MsgBox( Question$, MSGBOX_SETBUTTONS_YES_NO + WARNING_MESSAGE + MSGBOX_SECOND_BUTTON, WaltsMacros$ )
        If Answer% = MSGBOX_RETURN_NO Then
            Exit Sub
          Else
            AddAnyway = TRUE
        End If
      Else
        Remainders% = All6XX% - CountOfSimilarSubjectHeadings%
        If Remainders% > 0 Then
            If Remainders% = 1 Then
                FieldWord$ = FIELD
              Else
                FieldWord$ = FIELDS
            End If
            Question$ = "Do you want to copy the string to the non-" & TagName$ & FieldWord$ & "also?"
            Answer%   = MsgBox( Question$, MSGBOX_SETBUTTONS_YES_NO_CANCEL + WARNING_MESSAGE + MSGBOX_SECOND_BUTTON, WaltsMacros$ )
            Select Case Answer%
              Case MSGBOX_RETURN_CANCEL
                Exit Sub
              Case MSGBOX_RETURN_YES
                AddAnyway = TRUE
            End Select
        End If
    End If

End If

' Go through all the subject headings (unfortunately, that means going through every
' field of the record, looking for a subject tag--because to replace a field means
' knowing its line number, thus the "GetFieldLine" command is necessary), checking each
' for: a) whether it's an LC heading, and b) whether this string already appears at the
' end of the field. If it meets these conditions, it's an appropriate candidate. Add the
' subdivision string, removing a terminal period or full stop if necessary.

i = 1
Do
  FoundField = CS.GetFieldLine( i, FieldData$ )
  If FoundField Then
      CandidateTag$ = Left$( FieldData$, 3 )
      If CandidateTag$ Like "6[0135][01]" And Mid$( FieldData$, 5, 1 ) = "0" Then
          Select Case CandidateTag$
            Case "600"
              CandidateHeading% = PERSONAL_NAME_HEADING
            Case "610", "611"
              CandidateHeading% = CORP_CONF_NAME_HEADING
            Case "630"
              CandidateHeading% = TITLE_HEADING
            Case "650"
              CandidateHeading% = TOPICAL_HEADING
            Case "651"
              CandidateHeading% = GEOGRAPHIC_HEADING
          End Select
          If CandidateHeading% = SourceHeading% Or AddAnyway = TRUE Then
              If InStr( FieldData$, SubdivisionString$ ) = 0 Then
                  If Right$( FieldData$, 1 ) = "." Then
                      FieldData$ = Left$( FieldData$, Len( FieldData$ ) - 1 )
                  End If
                  NewField$ = FieldData$ & " " & SubdivisionString$
                  If CS.SetFieldLine( i, NewField$ ) Then
                      SuccessCount% = SuccessCount% + 1
                    Else
                      FailCount% = FailCount% + 1
                  End If
              End If
          End If
      End If
  End If
  i = i + 1
Loop Until FoundField = FALSE

' Display problem messages.

If FailCount% > 0 Then
    MsgBox "Sorry, the copied subdivisions could not be added.", CRITICAL_MESSAGE, WaltsMacros$
  ElseIf SuccessCount% = 0 Then
    MsgBox "No subdivisions were copied.", INFORMATION_MESSAGE, WaltsMacros$
End If

End Sub
'37416994
'
'Macro name: CopySubjectSubdivisions
'Macro book: C:\Program Files (x86)\OCLC\Connexion\Program\Macros\Extras2.mbk
'Saved: 12/17/2018 9:12:17 AM using "MacroBookInspector" macro by Walter F. Nickeson.
